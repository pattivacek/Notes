# Keyword help:
help(keyword)
# Short version (in IPython):
?keyword
# Find methods available in a given object:
# http://stackoverflow.com/questions/34439/finding-what-methods-an-object-has
dir(object)


# Common gotchas:
http://docs.python-guide.org/en/latest/writing/gotchas/


# Append to module search path:
# http://stackoverflow.com/questions/67631/how-to-import-a-module-given-the-full-path
sys.path.append('/path/')


# Reload a module that has changed:
import importlib
importlib.reload(some_module)


# Compare values:
a == b
# Compare identities (location in memory):
a is b

# Usually, identity (is) implies equality (==). NaN is a counterexample.
# The converse is not true: Two distinct objects can have the same value.
# http://stackoverflow.com/questions/2988017/string-comparison-in-python-is-vs
# String literals are interned in Python, meaning only one copy of each
# distinct string value is stored. This requires that strings must be
# immutable. Hence, if str1 = 'test' and str2 = 'test', str1 is str2 is True
# (as is str1 == str2).
# http://stackoverflow.com/questions/1504717/why-does-comparing-strings-in-python-using-either-or-is-sometimes-produce


# If you've accidentally bound a necessary function name (such as 'str') to a value:
# http://stackoverflow.com/questions/24637266/typeerror-list-object-is-not-callable-when-trying-to-convert-an-object-to-a-stri
# http://stackoverflow.com/questions/8237647/clear-variable-in-python
del str


# Expand a tuple/list into function input parameters:
# http://stackoverflow.com/questions/1993727/expanding-tuples-into-arguments
function(*tuple)

